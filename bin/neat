#!/usr/bin/env ruby
=begin rdoc
=RubyNEAT Launcher based on thor

=end

require 'thor'
require 'semver'

# Be sure rnlib is added to the library path
%w{ lib neater neater/rnlib }.each do |dir|
  $:.unshift File.join([Dir.pwd, dir])
end

NEATER = File.join [Dir.pwd, "neater"]
NEATGLOB = NEATER + '/*_neat.rb'

require 'rubyneat'

class RubyNEATCLI < Thor
  class_option :verbose, type: :string

  desc 'list [neaters|neurons]', 'List the requested type (defaults to neaters.'
  def list(ltype = 'neaters')
    send("list_#{ltype}")
  end

  desc 'version', 'Display RubyNEAT version'
  def version
    puts SemVer.find.format "%M.%m.%p%s"
  end

  desc 'console', 'Run RubyNEAT interactively'
  def console
    #TODO: Finish the console
    puts "Not Implemented Yet."
  end

  desc 'er NEATER [NEATER NEATER ...] [OPTS]', 'Run a Neater'
  option :log, type: :string
  def er(*neaters)
    NEAT::controller.verbosity = options[:verbose].to_i if options[:verbose]
    eval %{$log.level = Logger::#{options[:log].upcase}} if options[:log]

    neaters.map do |neater|
      "#{neater}_neat.rb"
    end.each do |file|
      load file
    end
  end

private
  def list_neaters
    Dir.glob(NEATGLOB).sort.each do |ne|
      puts 'neat er ' + File.basename(ne).gsub(%r{_neat\.rb}, '')
    end
  end

  def list_neurons
    puts NEAT::Neuron.neuron_types.map{|n| n.name }.sort.join "\n"
  end
end

RubyNEATCLI.start(ARGV)